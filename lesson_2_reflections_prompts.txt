What happens when you initialize a repository? Why do you need to do it?

	The .git folder is created where all the metadata is stored. Git needs this to keep track of the commit history of your files.
	
How can you use the staging area to make sure you have one commit per logical change?

	By using git diff to compare the working directory and the staging area, you can refresh what kind of changes you've made since you left off to determine whether it's time to commit for a single logical change.
	
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Examples include testing out a new feature while keeping a working version on the side, or adding a parallel variation to the code. These are not linear changes, hence, branches help organize them.
	
How do the diagrams help you visualize the branch structure?

	The diagrams show that we have a directed graph structure, and if we have no reference to a node at the end of a branch, we clearly have no way of reaching it. This shows that you need to create legit branches in order to move in another direction and save your work.
	
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	Git uses an algorithm to combine two files into a file having all features of both. We represent this by showing the branches that have diverges converge back together. This expresses how the code once went into two different directions from the same starting point, but then they are combined into a file that originates from both parents.