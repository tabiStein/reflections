When would you want to use a remote repository rather than keeping all your work local?

  Surely this would be a necessity when working in groups? Unless there is a way for groups working on the same network or whatever (I don't know anything) to locally share a project -- then a remote repository wouldn't be necessary for them all to access the code. In that case I suppose the benefit to having a remote repository would be the ability to access the code anywhere? Even then I am not sure this is impossible "locally," since I don't know what that means.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	
	It would take a lot of time to always keep Git and your remote repository in sync. Also, how could you do this offline? I don't think you could. And would pulling changes possibly overwrite something you're working on? Or would it just add files? I don't get it really.
	
Describe the differences between forks, clones, and branches. When would you use one instead of another?
	
	Forking is creating a clone of a repository from one github account to another. This is used when you want to store someone else's code in your own repository and then clone it to work off their code while giving credit of it. Cloning is for creating a copy of code. Branching also creates a copy of code but allows you to make changes to it while having another copy of the original in the same repository on another branch. Can you really even contrast them? They're all different.
	Branching vs forking & cloning: branching preserves chronological order. If you fork something, and that something changes, your fork isn't linked to it and so you don't see how they develop side by side. So you'd use a fork as a starting point I think. 
	Forking vs cloning: forking is a type of cloning I think...you use it just within github. You can't clone from one account to another I think. 
	
What is the benefit of having a copy of the last known state of the remote stored locally?

	I don't know! Besides the obvious of knowing what the latest version other people had seen when you pulled it, I don't see other benefits.
	
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	I guess one could use subversion, but I don't know how this works in groups. Email would be another method. Initially it would be easier since Github might be difficult to learn at first, but it would be a hassle to attach a bunch of files and for your group members to keep track of them all.